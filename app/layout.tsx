import type { Metadata } from "next";
import localFont from "next/font/local"
import "@/app/globals.css";
import { ThemeProvider } from "next-themes";
import { cookies } from "next/headers";
import { sdk } from "@/lib/sdk";
import { StoreProvider } from "@/providers/store-provider";
import { Toaster } from "@/components/ui/sonner";
import { createSessionedSdk } from "@/lib/sessionedSdk";

const SpaceGroteskFont = localFont({
  src: "../fonts/SpaceGrotesk.ttf"
})


export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  if (!process.env.NEXT_PUBLIC_MEDUSA_DEFAULT_REGION_ID) {
    throw new Error("Default region not set in environment variables");
  }
  const userCookies = await cookies();
  const cartId = userCookies.get("cartId")?.value.toString()
  const cartData = cartId
  ? await sdk.store.cart.retrieve(cartId).catch(() => null)
  : null;
  const regionId = userCookies.get("regionId")?.value || process.env.NEXT_PUBLIC_MEDUSA_DEFAULT_REGION_ID
  const regionData = await sdk.store.region.retrieve(regionId)
  const sessionedSdk = await createSessionedSdk()
  const customerData = await sessionedSdk.store.customer.retrieve().catch(() => null)
  return (
    <html suppressHydrationWarning lang="en">
      <body
        className={`${SpaceGroteskFont.className} antialiased`}
      >
        <Toaster />
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
            <StoreProvider preloadedState={{
              region: {
                regionData: regionData.region,
                loading: false,
                error: null
              },
              cart: {
                cartData: cartData?.cart,
                loading: false,
                error: null,
              },
              customer: {
                customerData: customerData?.customer
              }
            }}>
              {children}
            </StoreProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
